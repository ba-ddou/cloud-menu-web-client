# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - touch .env
    - echo API_URL=${ABSOLUTE_BETA_API_URL} >  .env
    - echo PORT=8080 >> .env
    - echo BRANCH_NAME="$CI_COMMIT_REF_NAME" >> .env
    - echo COMMIT_HASH="$CI_COMMIT_SHA" >> .env
    - echo PIPELINE_ID="$CI_PIPELINE_ID" >> .env
    - echo DEPLOYMENT_DATE=$(date) >> .env


    - echo $GCP_SERVICE_KEY > gcloud-service-key.json
    - cat gcloud-service-key.json | docker login -u _json_key --password-stdin gcr.io
    # - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - tag="gcr.io/${GCP_PROJECT_ID}/cloud-menu-web-client"
    - docker build --pull -t "${tag}" .
    - docker push "${tag}"


    # - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    # - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: '$CI_COMMIT_REF_NAME == "deployBeta"'
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy:
  stage: deploy
  image: google/cloud-sdk
  services:
    - docker:dind
  script:
    - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud builds submit . --config=cloudbuild.yaml
